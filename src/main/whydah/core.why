if |^false, _then, &else| -> else
if |^nothing, _then, &else| -> else
if |_condition, &then, _else| -> then
if |condition, &then| -> if condition, &then, nothing

not |condition| -> if condition, false, true

while |condition, &block| -> do
  if condition, do
    block
    while &condition, &block
  end
end

until |&condition, &block| -> while not condition, &block

forEachIn |items, &iter| -> do
  index = 0
  until index == items count, do
    iter (items get index)
    index = index + 1
  end
end

map |items, &transform| -> do
  transformed = []
  forEachIn items, |item| -> transformed add (transform item)
  return transformed
end

filter |items, &accept| -> do
  accepted = []
  forEachIn items, |item| -> if accept item, accepted add item
  return accepted
end
